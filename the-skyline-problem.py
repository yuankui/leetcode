# coding=utf-8
class Solution:
    '''思路(v2):
    上一个版本性能不够,反思了一下,是因为预处理做了很多不必要的预处理.
    1. 将所有的横线与竖线做了较差,实际上这样做是没有必要的,因为,真的在走的过程中,我们只关心边缘线的交点.
    另外一方面,我们刚开始建立的字段,其实真正在哟刚到的时候,每个key还是只查了一次,没有起到复用的作用
    因此,我们考虑走的过程中按需计算

    步骤:
    1. 从左下角(0,0)点开始出发,遵从以下原则
        1.1 优先往上走,其次往右走,最后不行才往下走,知道走到(MAX_INT,0)为止,打印所有往右走的动作的起点就是最终的关键点.

    2. 往右走: **枚举当前Y的所有的横线**,取右端点X最大的,然后用这段区间与竖线相交,找到第一个高度大于该线的竖线,
        2.1 如果有,记下高度为Y那么就到达该点,下一次动作为[上,Y1]
        2.2 如果没有,那么就到达该点的终点,并想下走[设置下次动作选项仅为[下]]
        2.1 怎么判断是否有交点: 枚举所有竖线满足条件[X>当前X and Y>当前Y]
    3. 往上走: 一直走到[X,Y1][该方向的最高点],然后设置下一次动作选项仅为[右]
    4. 往下走: 枚举所有横线,取最近有交点的,并且右端点大于当前X坐标的(一定存在,因为右[0-MAX_INT]这条地平线),然后设置下一次动作为[右]

    5. 写到这里突然又有了第三个点子,效率更高,实现更简单
    # @param {integer[][]} buildings
    # @return {integer[][]}
    '''
    MOVE_UP = "moveUp"
    MOVE_DOWN = "moveDown"
    MOVE_RIGHT = "moveRight"

    ACTION_MAP = {
        MOVE_RIGHT: [MOVE_UP, MOVE_RIGHT, MOVE_DOWN],
        MOVE_UP: [MOVE_RIGHT],
        MOVE_DOWN: [MOVE_RIGHT, MOVE_DOWN]
    }

    MAX_INT = 2 ** 64

    def getSkyline(self, buildings):
        if len(buildings) == 0:
            return []
        self.verticals = self.getAllVerticalLines(buildings)
        self.horizontals = self.getAllHorizontalLines(buildings)
        self.xVerticalLineMap = self.makeXVerticalLineMap(self.verticals)

        self.pointHorizontalMap = {}
        self.pointVerticalMap = {}
        self.yPointMap = {}
        self.xPointMap = {}

        self.crossAllLines(self.verticals, self.horizontals)

        return self.moveNow()


    def moveNow(self):
        currentPoint = (0, 0)
        lastAction = Solution.MOVE_RIGHT
        self.route = []
        # 一致走,直到走到底
        while currentPoint != (Solution.MAX_INT, 0):
            if currentPoint == (7,15):
                pass
            actions = Solution.ACTION_MAP[lastAction]
            for action in actions:
                move = getattr(self, action)
                success, currentPoint = move(currentPoint)
                if success:
                    lastAction = action
                    break

        print self.route[1:]
        return self.route[1:]

    def moveUp(self, point):
        x, y = point
        lines = self.xVerticalLineMap.get(x, [])

        maxHeight = reduce(lambda height, line: max(height, line[1]), lines, y)

        if maxHeight > y:
            return True, (x, maxHeight)
        else:
            return False, point

    def moveDown(self, point):
        x, y = point
        points = self.xPointMap[x]

        minDis = Solution.MAX_INT
        dest = point
        for p in points:
            px, py = p
            if py < y and y - py < minDis:
                minDis, dest = y - py, p

        # 向下始终能走(前提是上,右都尝试过)
        return True, dest

    def moveRight(self, point):
        x, y = point
        points = self.yPointMap[y]

        minDis = Solution.MAX_INT
        dest = point

        for p in points:
            px, py = p
            if px > x and px - x < minDis:
                minDis, dest = px - x, p

        # 向右也始终能走,前提是,向上尝试过
        if dest != point:
            # print point, " -> ", dest
            self.route.append(point)
            return True, dest
        else:
            return False, point

    ### 0.2.2
    def crossAllLines(self, verticals, horizontals):
        for horizontal in horizontals:
            x1, x2, y = horizontal
            index = self.findLeftIndex(x1, verticals)
            # index = 0
            while True:
                vertical = verticals[index]
                self.crossLine(horizontal, vertical)

                ## 没有枚举完,并且没有超过横线的范围
                if len(verticals) > index + 1 and verticals[index + 1][0] <= x2:
                    index += 1
                else:
                    break

    def crossLine(self, horizontal, vertical):
        hx1, hx2, hy = horizontal
        vx, vy = vertical
        if hx1 <= vx and vx <= hx2 and hy <= vy:
            point = (vx, hy)

            ### 0.2.2
            if point in self.pointHorizontalMap:
                self.pointHorizontalMap[point].append(horizontal)
            else:
                self.pointHorizontalMap[point] = [horizontal]

            ### 0.2.2
            if point in self.pointVerticalMap:
                self.pointVerticalMap[point].append(vertical)
            else:
                self.pointVerticalMap[point] = [vertical]

            ### 0.3
            if point[1] in self.yPointMap:
                self.yPointMap[point[1]].append(point)
            else:
                self.yPointMap[point[1]] = [point]

            if point[0] in self.xPointMap:
                self.xPointMap[point[0]].append(point)
            else:
                self.xPointMap[point[0]] = [point]

    def findLeftIndex(self, targetX, verticals):
        left, right = 0, len(verticals)
        while left < right:
            middle = int((left + right) / 2)
            x, h = verticals[middle]
            if left + 1 >= right:
                return left
            if targetX > x:
                left = middle
            elif targetX < x:
                right = middle
            else:
                return middle

    ### 0.2.1
    def getAllVerticalLines(self, buildings):
        lines = []
        for building in buildings:
            # (x,yHeight)
            line1 = (building[0], building[2])
            line2 = (building[1], building[2])
            lines.append(line1)
            lines.append(line2)

        lines.append((Solution.MAX_INT, 0))
        lines = sorted(lines, key=lambda x: x[0])
        return lines

    ### 0.2.1
    def getAllHorizontalLines(self, buildings):
        lines = []
        for building in buildings:
            # (x1,x2,yHeight)
            line = (building[0], building[1], building[2])
            lines.append(line)

        ## 加上特殊的水平线 - 地平线
        lines.append((0, Solution.MAX_INT, 0))
        return lines

    ### 0.1
    def makeXVerticalLineMap(self, lines):
        xVerticalLineMap = {}
        for line in lines:
            if not line[0] in xVerticalLineMap:
                xVerticalLineMap[line[0]] = [line]
            else:
                xVerticalLineMap[line[0]].append(line)

        return xVerticalLineMap


import unittest


class SolutionTest(unittest.TestCase):
    def setUp(self):
        self.s = Solution()

    def testGetAllVerticalLines(self):
        buildings = [[2, 9, 10], [3, 7, 15], [5, 12, 12], [15, 20, 10], [19, 24, 8]]
        print self.s.getAllVerticalLines(buildings)

    def testFindLeftIndex(self):
        res1 = self.s.findLeftIndex(4, [(1, 1), (2, 2), (3, 3), (5, 5), (7, 7)])
        res2 = self.s.findLeftIndex(4, [(1, 1), (2, 2), (3, 3), (4, 5), (7, 7)])

        self.assertEqual(res1, 2)
        self.assertEqual(res2, 3)

    def testGetSkyLines(self):
        # buildings = [[2, 9, 10], [3, 7, 15], [5, 12, 12], [15, 20, 10], [19, 24, 8]]
        # self.s.getSkyline(buildings)
        # self.s.getSkyline([])
        # buildings = [[1,3000,1],[2,2999,2],[3,2998,3],[4,2997,4],[5,2996,5],[6,2995,6],[7,2994,7],[8,2993,8],[9,2992,9],[10,2991,10],[11,2990,11],[12,2989,12],[13,2988,13],[14,2987,14],[15,2986,15],[16,2985,16],[17,2984,17],[18,2983,18],[19,2982,19],[20,2981,20],[21,2980,21],[22,2979,22],[23,2978,23],[24,2977,24],[25,2976,25],[26,2975,26],[27,2974,27],[28,2973,28],[29,2972,29],[30,2971,30],[31,2970,31],[32,2969,32],[33,2968,33],[34,2967,34],[35,2966,35],[36,2965,36],[37,2964,37],[38,2963,38],[39,2962,39],[40,2961,40],[41,2960,41],[42,2959,42],[43,2958,43],[44,2957,44],[45,2956,45],[46,2955,46],[47,2954,47],[48,2953,48],[49,2952,49],[50,2951,50],[51,2950,51],[52,2949,52],[53,2948,53],[54,2947,54],[55,2946,55],[56,2945,56],[57,2944,57],[58,2943,58],[59,2942,59],[60,2941,60],[61,2940,61],[62,2939,62],[63,2938,63],[64,2937,64],[65,2936,65],[66,2935,66],[67,2934,67],[68,2933,68],[69,2932,69],[70,2931,70],[71,2930,71],[72,2929,72],[73,2928,73],[74,2927,74],[75,2926,75],[76,2925,76],[77,2924,77],[78,2923,78],[79,2922,79],[80,2921,80],[81,2920,81],[82,2919,82],[83,2918,83],[84,2917,84],[85,2916,85],[86,2915,86],[87,2914,87],[88,2913,88],[89,2912,89],[90,2911,90],[91,2910,91],[92,2909,92],[93,2908,93],[94,2907,94],[95,2906,95],[96,2905,96],[97,2904,97],[98,2903,98],[99,2902,99],[100,2901,100],[101,2900,101],[102,2899,102],[103,2898,103],[104,2897,104],[105,2896,105],[106,2895,106],[107,2894,107],[108,2893,108],[109,2892,109],[110,2891,110],[111,2890,111],[112,2889,112],[113,2888,113],[114,2887,114],[115,2886,115],[116,2885,116],[117,2884,117],[118,2883,118],[119,2882,119],[120,2881,120],[121,2880,121],[122,2879,122],[123,2878,123],[124,2877,124],[125,2876,125],[126,2875,126],[127,2874,127],[128,2873,128],[129,2872,129],[130,2871,130],[131,2870,131],[132,2869,132],[133,2868,133],[134,2867,134],[135,2866,135],[136,2865,136],[137,2864,137],[138,2863,138],[139,2862,139],[140,2861,140],[141,2860,141],[142,2859,142],[143,2858,143],[144,2857,144],[145,2856,145],[146,2855,146],[147,2854,147],[148,2853,148],[149,2852,149],[150,2851,150],[151,2850,151],[152,2849,152],[153,2848,153],[154,2847,154],[155,2846,155],[156,2845,156],[157,2844,157],[158,2843,158],[159,2842,159],[160,2841,160],[161,2840,161],[162,2839,162],[163,2838,163],[164,2837,164],[165,2836,165],[166,2835,166],[167,2834,167],[168,2833,168],[169,2832,169],[170,2831,170],[171,2830,171],[172,2829,172],[173,2828,173],[174,2827,174],[175,2826,175],[176,2825,176],[177,2824,177],[178,2823,178],[179,2822,179],[180,2821,180],[181,2820,181],[182,2819,182],[183,2818,183],[184,2817,184],[185,2816,185],[186,2815,186],[187,2814,187],[188,2813,188],[189,2812,189],[190,2811,190],[191,2810,191],[192,2809,192],[193,2808,193],[194,2807,194],[195,2806,195],[196,2805,196],[197,2804,197],[198,2803,198],[199,2802,199],[200,2801,200],[201,2800,201],[202,2799,202],[203,2798,203],[204,2797,204],[205,2796,205],[206,2795,206],[207,2794,207],[208,2793,208],[209,2792,209],[210,2791,210],[211,2790,211],[212,2789,212],[213,2788,213],[214,2787,214],[215,2786,215],[216,2785,216],[217,2784,217],[218,2783,218],[219,2782,219],[220,2781,220],[221,2780,221],[222,2779,222],[223,2778,223],[224,2777,224],[225,2776,225],[226,2775,226],[227,2774,227],[228,2773,228],[229,2772,229],[230,2771,230],[231,2770,231],[232,2769,232],[233,2768,233],[234,2767,234],[235,2766,235],[236,2765,236],[237,2764,237],[238,2763,238],[239,2762,239],[240,2761,240],[241,2760,241],[242,2759,242],[243,2758,243],[244,2757,244],[245,2756,245],[246,2755,246],[247,2754,247],[248,2753,248],[249,2752,249],[250,2751,250],[251,2750,251],[252,2749,252],[253,2748,253],[254,2747,254],[255,2746,255],[256,2745,256],[257,2744,257],[258,2743,258],[259,2742,259],[260,2741,260],[261,2740,261],[262,2739,262],[263,2738,263],[264,2737,264],[265,2736,265],[266,2735,266],[267,2734,267],[268,2733,268],[269,2732,269],[270,2731,270],[271,2730,271],[272,2729,272],[273,2728,273],[274,2727,274],[275,2726,275],[276,2725,276],[277,2724,277],[278,2723,278],[279,2722,279],[280,2721,280],[281,2720,281],[282,2719,282],[283,2718,283],[284,2717,284],[285,2716,285],[286,2715,286],[287,2714,287],[288,2713,288],[289,2712,289],[290,2711,290],[291,2710,291],[292,2709,292],[293,2708,293],[294,2707,294],[295,2706,295],[296,2705,296],[297,2704,297],[298,2703,298],[299,2702,299],[300,2701,300],[301,2700,301],[302,2699,302],[303,2698,303],[304,2697,304],[305,2696,305],[306,2695,306],[307,2694,307],[308,2693,308],[309,2692,309],[310,2691,310],[311,2690,311],[312,2689,312],[313,2688,313],[314,2687,314],[315,2686,315],[316,2685,316],[317,2684,317],[318,2683,318],[319,2682,319],[320,2681,320],[321,2680,321],[322,2679,322],[323,2678,323],[324,2677,324],[325,2676,325],[326,2675,326],[327,2674,327],[328,2673,328],[329,2672,329],[330,2671,330],[331,2670,331],[332,2669,332],[333,2668,333],[334,2667,334],[335,2666,335],[336,2665,336],[337,2664,337],[338,2663,338],[339,2662,339],[340,2661,340],[341,2660,341],[342,2659,342],[343,2658,343],[344,2657,344],[345,2656,345],[346,2655,346],[347,2654,347],[348,2653,348],[349,2652,349],[350,2651,350],[351,2650,351],[352,2649,352],[353,2648,353],[354,2647,354],[355,2646,355],[356,2645,356],[357,2644,357],[358,2643,358],[359,2642,359],[360,2641,360],[361,2640,361],[362,2639,362],[363,2638,363],[364,2637,364],[365,2636,365],[366,2635,366],[367,2634,367],[368,2633,368],[369,2632,369],[370,2631,370],[371,2630,371],[372,2629,372],[373,2628,373],[374,2627,374],[375,2626,375],[376,2625,376],[377,2624,377],[378,2623,378],[379,2622,379],[380,2621,380],[381,2620,381],[382,2619,382],[383,2618,383],[384,2617,384],[385,2616,385],[386,2615,386],[387,2614,387],[388,2613,388],[389,2612,389],[390,2611,390],[391,2610,391],[392,2609,392],[393,2608,393],[394,2607,394],[395,2606,395],[396,2605,396],[397,2604,397],[398,2603,398],[399,2602,399],[400,2601,400],[401,2600,401],[402,2599,402],[403,2598,403],[404,2597,404],[405,2596,405],[406,2595,406],[407,2594,407],[408,2593,408],[409,2592,409],[410,2591,410],[411,2590,411],[412,2589,412],[413,2588,413],[414,2587,414],[415,2586,415],[416,2585,416],[417,2584,417],[418,2583,418],[419,2582,419],[420,2581,420],[421,2580,421],[422,2579,422],[423,2578,423],[424,2577,424],[425,2576,425],[426,2575,426],[427,2574,427],[428,2573,428],[429,2572,429],[430,2571,430],[431,2570,431],[432,2569,432],[433,2568,433],[434,2567,434],[435,2566,435],[436,2565,436],[437,2564,437],[438,2563,438],[439,2562,439],[440,2561,440],[441,2560,441],[442,2559,442],[443,2558,443],[444,2557,444],[445,2556,445],[446,2555,446],[447,2554,447],[448,2553,448],[449,2552,449],[450,2551,450],[451,2550,451],[452,2549,452],[453,2548,453],[454,2547,454],[455,2546,455],[456,2545,456],[457,2544,457],[458,2543,458],[459,2542,459],[460,2541,460],[461,2540,461],[462,2539,462],[463,2538,463],[464,2537,464],[465,2536,465],[466,2535,466],[467,2534,467],[468,2533,468],[469,2532,469],[470,2531,470],[471,2530,471],[472,2529,472],[473,2528,473],[474,2527,474],[475,2526,475],[476,2525,476],[477,2524,477],[478,2523,478],[479,2522,479],[480,2521,480],[481,2520,481],[482,2519,482],[483,2518,483],[484,2517,484],[485,2516,485],[486,2515,486],[487,2514,487],[488,2513,488],[489,2512,489],[490,2511,490],[491,2510,491],[492,2509,492],[493,2508,493],[494,2507,494],[495,2506,495],[496,2505,496],[497,2504,497],[498,2503,498],[499,2502,499],[500,2501,500],[501,2500,501],[502,2499,502],[503,2498,503],[504,2497,504],[505,2496,505],[506,2495,506],[507,2494,507],[508,2493,508],[509,2492,509],[510,2491,510],[511,2490,511],[512,2489,512],[513,2488,513],[514,2487,514],[515,2486,515],[516,2485,516],[517,2484,517],[518,2483,518],[519,2482,519],[520,2481,520],[521,2480,521],[522,2479,522],[523,2478,523],[524,2477,524],[525,2476,525],[526,2475,526],[527,2474,527],[528,2473,528],[529,2472,529],[530,2471,530],[531,2470,531],[532,2469,532],[533,2468,533],[534,2467,534],[535,2466,535],[536,2465,536],[537,2464,537],[538,2463,538],[539,2462,539],[540,2461,540],[541,2460,541],[542,2459,542],[543,2458,543],[544,2457,544],[545,2456,545],[546,2455,546],[547,2454,547],[548,2453,548],[549,2452,549],[550,2451,550],[551,2450,551],[552,2449,552],[553,2448,553],[554,2447,554],[555,2446,555],[556,2445,556],[557,2444,557],[558,2443,558],[559,2442,559],[560,2441,560],[561,2440,561],[562,2439,562],[563,2438,563],[564,2437,564],[565,2436,565],[566,2435,566],[567,2434,567],[568,2433,568],[569,2432,569],[570,2431,570],[571,2430,571],[572,2429,572],[573,2428,573],[574,2427,574],[575,2426,575],[576,2425,576],[577,2424,577],[578,2423,578],[579,2422,579],[580,2421,580],[581,2420,581],[582,2419,582],[583,2418,583],[584,2417,584],[585,2416,585],[586,2415,586],[587,2414,587],[588,2413,588],[589,2412,589],[590,2411,590],[591,2410,591],[592,2409,592],[593,2408,593],[594,2407,594],[595,2406,595],[596,2405,596],[597,2404,597],[598,2403,598],[599,2402,599],[600,2401,600],[601,2400,601],[602,2399,602],[603,2398,603],[604,2397,604],[605,2396,605],[606,2395,606],[607,2394,607],[608,2393,608],[609,2392,609],[610,2391,610],[611,2390,611],[612,2389,612],[613,2388,613],[614,2387,614],[615,2386,615],[616,2385,616],[617,2384,617],[618,2383,618],[619,2382,619],[620,2381,620],[621,2380,621],[622,2379,622],[623,2378,623],[624,2377,624],[625,2376,625],[626,2375,626],[627,2374,627],[628,2373,628],[629,2372,629],[630,2371,630],[631,2370,631],[632,2369,632],[633,2368,633],[634,2367,634],[635,2366,635],[636,2365,636],[637,2364,637],[638,2363,638],[639,2362,639],[640,2361,640],[641,2360,641],[642,2359,642],[643,2358,643],[644,2357,644],[645,2356,645],[646,2355,646],[647,2354,647],[648,2353,648],[649,2352,649],[650,2351,650],[651,2350,651],[652,2349,652],[653,2348,653],[654,2347,654],[655,2346,655],[656,2345,656],[657,2344,657],[658,2343,658],[659,2342,659],[660,2341,660],[661,2340,661],[662,2339,662],[663,2338,663],[664,2337,664],[665,2336,665],[666,2335,666],[667,2334,667],[668,2333,668],[669,2332,669],[670,2331,670],[671,2330,671],[672,2329,672],[673,2328,673],[674,2327,674],[675,2326,675],[676,2325,676],[677,2324,677],[678,2323,678],[679,2322,679],[680,2321,680],[681,2320,681],[682,2319,682],[683,2318,683],[684,2317,684],[685,2316,685],[686,2315,686],[687,2314,687],[688,2313,688],[689,2312,689],[690,2311,690],[691,2310,691],[692,2309,692],[693,2308,693],[694,2307,694],[695,2306,695],[696,2305,696],[697,2304,697],[698,2303,698],[699,2302,699],[700,2301,700],[701,2300,701],[702,2299,702],[703,2298,703],[704,2297,704],[705,2296,705],[706,2295,706],[707,2294,707],[708,2293,708],[709,2292,709],[710,2291,710],[711,2290,711],[712,2289,712],[713,2288,713],[714,2287,714],[715,2286,715],[716,2285,716],[717,2284,717],[718,2283,718],[719,2282,719],[720,2281,720],[721,2280,721],[722,2279,722],[723,2278,723],[724,2277,724],[725,2276,725],[726,2275,726],[727,2274,727],[728,2273,728],[729,2272,729],[730,2271,730],[731,2270,731],[732,2269,732],[733,2268,733],[734,2267,734],[735,2266,735],[736,2265,736],[737,2264,737],[738,2263,738],[739,2262,739],[740,2261,740],[741,2260,741],[742,2259,742],[743,2258,743],[744,2257,744],[745,2256,745],[746,2255,746],[747,2254,747],[748,2253,748],[749,2252,749],[750,2251,750],[751,2250,751],[752,2249,752],[753,2248,753],[754,2247,754],[755,2246,755],[756,2245,756],[757,2244,757],[758,2243,758],[759,2242,759],[760,2241,760],[761,2240,761],[762,2239,762],[763,2238,763],[764,2237,764],[765,2236,765],[766,2235,766],[767,2234,767],[768,2233,768],[769,2232,769],[770,2231,770],[771,2230,771],[772,2229,772],[773,2228,773],[774,2227,774],[775,2226,775],[776,2225,776],[777,2224,777],[778,2223,778],[779,2222,779],[780,2221,780],[781,2220,781],[782,2219,782],[783,2218,783],[784,2217,784],[785,2216,785],[786,2215,786],[787,2214,787],[788,2213,788],[789,2212,789],[790,2211,790],[791,2210,791],[792,2209,792],[793,2208,793],[794,2207,794],[795,2206,795],[796,2205,796],[797,2204,797],[798,2203,798],[799,2202,799],[800,2201,800],[801,2200,801],[802,2199,802],[803,2198,803],[804,2197,804],[805,2196,805],[806,2195,806],[807,2194,807],[808,2193,808],[809,2192,809],[810,2191,810],[811,2190,811],[812,2189,812],[813,2188,813],[814,2187,814],[815,2186,815],[816,2185,816],[817,2184,817],[818,2183,818],[819,2182,819],[820,2181,820],[821,2180,821],[822,2179,822],[823,2178,823],[824,2177,824],[825,2176,825],[826,2175,826],[827,2174,827],[828,2173,828],[829,2172,829],[830,2171,830],[831,2170,831],[832,2169,832],[833,2168,833],[834,2167,834],[835,2166,835],[836,2165,836],[837,2164,837],[838,2163,838],[839,2162,839],[840,2161,840],[841,2160,841],[842,2159,842],[843,2158,843],[844,2157,844],[845,2156,845],[846,2155,846],[847,2154,847],[848,2153,848],[849,2152,849],[850,2151,850],[851,2150,851],[852,2149,852],[853,2148,853],[854,2147,854],[855,2146,855],[856,2145,856],[857,2144,857],[858,2143,858],[859,2142,859],[860,2141,860],[861,2140,861],[862,2139,862],[863,2138,863],[864,2137,864],[865,2136,865],[866,2135,866],[867,2134,867],[868,2133,868],[869,2132,869],[870,2131,870],[871,2130,871],[872,2129,872],[873,2128,873],[874,2127,874],[875,2126,875],[876,2125,876],[877,2124,877],[878,2123,878],[879,2122,879],[880,2121,880],[881,2120,881],[882,2119,882],[883,2118,883],[884,2117,884],[885,2116,885],[886,2115,886],[887,2114,887],[888,2113,888],[889,2112,889],[890,2111,890],[891,2110,891],[892,2109,892],[893,2108,893],[894,2107,894],[895,2106,895],[896,2105,896],[897,2104,897],[898,2103,898],[899,2102,899],[900,2101,900],[901,2100,901],[902,2099,902],[903,2098,903],[904,2097,904],[905,2096,905],[906,2095,906],[907,2094,907],[908,2093,908],[909,2092,909],[910,2091,910],[911,2090,911],[912,2089,912],[913,2088,913],[914,2087,914],[915,2086,915],[916,2085,916],[917,2084,917],[918,2083,918],[919,2082,919],[920,2081,920],[921,2080,921],[922,2079,922],[923,2078,923],[924,2077,924],[925,2076,925],[926,2075,926],[927,2074,927],[928,2073,928],[929,2072,929],[930,2071,930],[931,2070,931],[932,2069,932],[933,2068,933],[934,2067,934],[935,2066,935],[936,2065,936],[937,2064,937],[938,2063,938],[939,2062,939],[940,2061,940],[941,2060,941],[942,2059,942],[943,2058,943],[944,2057,944],[945,2056,945],[946,2055,946],[947,2054,947],[948,2053,948],[949,2052,949],[950,2051,950],[951,2050,951],[952,2049,952],[953,2048,953],[954,2047,954],[955,2046,955],[956,2045,956],[957,2044,957],[958,2043,958],[959,2042,959],[960,2041,960],[961,2040,961],[962,2039,962],[963,2038,963],[964,2037,964],[965,2036,965],[966,2035,966],[967,2034,967],[968,2033,968],[969,2032,969],[970,2031,970],[971,2030,971],[972,2029,972],[973,2028,973],[974,2027,974],[975,2026,975],[976,2025,976],[977,2024,977],[978,2023,978],[979,2022,979],[980,2021,980],[981,2020,981],[982,2019,982],[983,2018,983],[984,2017,984],[985,2016,985],[986,2015,986],[987,2014,987],[988,2013,988],[989,2012,989],[990,2011,990],[991,2010,991],[992,2009,992],[993,2008,993],[994,2007,994],[995,2006,995],[996,2005,996],[997,2004,997],[998,2003,998],[999,2002,999],[1000,2001,1000],[1001,2000,1001],[1002,1999,1002],[1003,1998,1003],[1004,1997,1004],[1005,1996,1005],[1006,1995,1006],[1007,1994,1007],[1008,1993,1008],[1009,1992,1009],[1010,1991,1010],[1011,1990,1011],[1012,1989,1012],[1013,1988,1013],[1014,1987,1014],[1015,1986,1015],[1016,1985,1016],[1017,1984,1017],[1018,1983,1018],[1019,1982,1019],[1020,1981,1020],[1021,1980,1021],[1022,1979,1022],[1023,1978,1023],[1024,1977,1024],[1025,1976,1025],[1026,1975,1026],[1027,1974,1027],[1028,1973,1028],[1029,1972,1029],[1030,1971,1030],[1031,1970,1031],[1032,1969,1032],[1033,1968,1033],[1034,1967,1034],[1035,1966,1035],[1036,1965,1036],[1037,1964,1037],[1038,1963,1038],[1039,1962,1039],[1040,1961,1040],[1041,1960,1041],[1042,1959,1042],[1043,1958,1043],[1044,1957,1044],[1045,1956,1045],[1046,1955,1046],[1047,1954,1047],[1048,1953,1048],[1049,1952,1049],[1050,1951,1050],[1051,1950,1051],[1052,1949,1052],[1053,1948,1053],[1054,1947,1054],[1055,1946,1055],[1056,1945,1056],[1057,1944,1057],[1058,1943,1058],[1059,1942,1059],[1060,1941,1060],[1061,1940,1061],[1062,1939,1062],[1063,1938,1063],[1064,1937,1064],[1065,1936,1065],[1066,1935,1066],[1067,1934,1067],[1068,1933,1068],[1069,1932,1069],[1070,1931,1070],[1071,1930,1071],[1072,1929,1072],[1073,1928,1073],[1074,1927,1074],[1075,1926,1075],[1076,1925,1076],[1077,1924,1077],[1078,1923,1078],[1079,1922,1079],[1080,1921,1080],[1081,1920,1081],[1082,1919,1082],[1083,1918,1083],[1084,1917,1084],[1085,1916,1085],[1086,1915,1086],[1087,1914,1087],[1088,1913,1088],[1089,1912,1089],[1090,1911,1090],[1091,1910,1091],[1092,1909,1092],[1093,1908,1093],[1094,1907,1094],[1095,1906,1095],[1096,1905,1096],[1097,1904,1097],[1098,1903,1098],[1099,1902,1099],[1100,1901,1100],[1101,1900,1101],[1102,1899,1102],[1103,1898,1103],[1104,1897,1104],[1105,1896,1105],[1106,1895,1106],[1107,1894,1107],[1108,1893,1108],[1109,1892,1109],[1110,1891,1110],[1111,1890,1111],[1112,1889,1112],[1113,1888,1113],[1114,1887,1114],[1115,1886,1115],[1116,1885,1116],[1117,1884,1117],[1118,1883,1118],[1119,1882,1119],[1120,1881,1120],[1121,1880,1121],[1122,1879,1122],[1123,1878,1123],[1124,1877,1124],[1125,1876,1125],[1126,1875,1126],[1127,1874,1127],[1128,1873,1128],[1129,1872,1129],[1130,1871,1130],[1131,1870,1131],[1132,1869,1132],[1133,1868,1133],[1134,1867,1134],[1135,1866,1135],[1136,1865,1136],[1137,1864,1137],[1138,1863,1138],[1139,1862,1139],[1140,1861,1140],[1141,1860,1141],[1142,1859,1142],[1143,1858,1143],[1144,1857,1144],[1145,1856,1145],[1146,1855,1146],[1147,1854,1147],[1148,1853,1148],[1149,1852,1149],[1150,1851,1150],[1151,1850,1151],[1152,1849,1152],[1153,1848,1153],[1154,1847,1154],[1155,1846,1155],[1156,1845,1156],[1157,1844,1157],[1158,1843,1158],[1159,1842,1159],[1160,1841,1160],[1161,1840,1161],[1162,1839,1162],[1163,1838,1163],[1164,1837,1164],[1165,1836,1165],[1166,1835,1166],[1167,1834,1167],[1168,1833,1168],[1169,1832,1169],[1170,1831,1170],[1171,1830,1171],[1172,1829,1172],[1173,1828,1173],[1174,1827,1174],[1175,1826,1175],[1176,1825,1176],[1177,1824,1177],[1178,1823,1178],[1179,1822,1179],[1180,1821,1180],[1181,1820,1181],[1182,1819,1182],[1183,1818,1183],[1184,1817,1184],[1185,1816,1185],[1186,1815,1186],[1187,1814,1187],[1188,1813,1188],[1189,1812,1189],[1190,1811,1190],[1191,1810,1191],[1192,1809,1192],[1193,1808,1193],[1194,1807,1194],[1195,1806,1195],[1196,1805,1196],[1197,1804,1197],[1198,1803,1198],[1199,1802,1199],[1200,1801,1200],[1201,1800,1201],[1202,1799,1202],[1203,1798,1203],[1204,1797,1204],[1205,1796,1205],[1206,1795,1206],[1207,1794,1207],[1208,1793,1208],[1209,1792,1209],[1210,1791,1210],[1211,1790,1211],[1212,1789,1212],[1213,1788,1213],[1214,1787,1214],[1215,1786,1215],[1216,1785,1216],[1217,1784,1217],[1218,1783,1218],[1219,1782,1219],[1220,1781,1220],[1221,1780,1221],[1222,1779,1222],[1223,1778,1223],[1224,1777,1224],[1225,1776,1225],[1226,1775,1226],[1227,1774,1227],[1228,1773,1228],[1229,1772,1229],[1230,1771,1230],[1231,1770,1231],[1232,1769,1232],[1233,1768,1233],[1234,1767,1234],[1235,1766,1235],[1236,1765,1236],[1237,1764,1237],[1238,1763,1238],[1239,1762,1239],[1240,1761,1240],[1241,1760,1241],[1242,1759,1242],[1243,1758,1243],[1244,1757,1244],[1245,1756,1245],[1246,1755,1246],[1247,1754,1247],[1248,1753,1248],[1249,1752,1249],[1250,1751,1250],[1251,1750,1251],[1252,1749,1252],[1253,1748,1253],[1254,1747,1254],[1255,1746,1255],[1256,1745,1256],[1257,1744,1257],[1258,1743,1258],[1259,1742,1259],[1260,1741,1260],[1261,1740,1261],[1262,1739,1262],[1263,1738,1263],[1264,1737,1264],[1265,1736,1265],[1266,1735,1266],[1267,1734,1267],[1268,1733,1268],[1269,1732,1269],[1270,1731,1270],[1271,1730,1271],[1272,1729,1272],[1273,1728,1273],[1274,1727,1274],[1275,1726,1275],[1276,1725,1276],[1277,1724,1277],[1278,1723,1278],[1279,1722,1279],[1280,1721,1280],[1281,1720,1281],[1282,1719,1282],[1283,1718,1283],[1284,1717,1284],[1285,1716,1285],[1286,1715,1286],[1287,1714,1287],[1288,1713,1288],[1289,1712,1289],[1290,1711,1290],[1291,1710,1291],[1292,1709,1292],[1293,1708,1293],[1294,1707,1294],[1295,1706,1295],[1296,1705,1296],[1297,1704,1297],[1298,1703,1298],[1299,1702,1299],[1300,1701,1300],[1301,1700,1301],[1302,1699,1302],[1303,1698,1303],[1304,1697,1304],[1305,1696,1305],[1306,1695,1306],[1307,1694,1307],[1308,1693,1308],[1309,1692,1309],[1310,1691,1310],[1311,1690,1311],[1312,1689,1312],[1313,1688,1313],[1314,1687,1314],[1315,1686,1315],[1316,1685,1316],[1317,1684,1317],[1318,1683,1318],[1319,1682,1319],[1320,1681,1320],[1321,1680,1321],[1322,1679,1322],[1323,1678,1323],[1324,1677,1324],[1325,1676,1325],[1326,1675,1326],[1327,1674,1327],[1328,1673,1328],[1329,1672,1329],[1330,1671,1330],[1331,1670,1331],[1332,1669,1332],[1333,1668,1333],[1334,1667,1334],[1335,1666,1335],[1336,1665,1336],[1337,1664,1337],[1338,1663,1338],[1339,1662,1339],[1340,1661,1340],[1341,1660,1341],[1342,1659,1342],[1343,1658,1343],[1344,1657,1344],[1345,1656,1345],[1346,1655,1346],[1347,1654,1347],[1348,1653,1348],[1349,1652,1349],[1350,1651,1350],[1351,1650,1351],[1352,1649,1352],[1353,1648,1353],[1354,1647,1354],[1355,1646,1355],[1356,1645,1356],[1357,1644,1357],[1358,1643,1358],[1359,1642,1359],[1360,1641,1360],[1361,1640,1361],[1362,1639,1362],[1363,1638,1363],[1364,1637,1364],[1365,1636,1365],[1366,1635,1366],[1367,1634,1367],[1368,1633,1368],[1369,1632,1369],[1370,1631,1370],[1371,1630,1371],[1372,1629,1372],[1373,1628,1373],[1374,1627,1374],[1375,1626,1375],[1376,1625,1376],[1377,1624,1377],[1378,1623,1378],[1379,1622,1379],[1380,1621,1380],[1381,1620,1381],[1382,1619,1382],[1383,1618,1383],[1384,1617,1384],[1385,1616,1385],[1386,1615,1386],[1387,1614,1387],[1388,1613,1388],[1389,1612,1389],[1390,1611,1390],[1391,1610,1391],[1392,1609,1392],[1393,1608,1393],[1394,1607,1394],[1395,1606,1395],[1396,1605,1396],[1397,1604,1397],[1398,1603,1398],[1399,1602,1399],[1400,1601,1400],[1401,1600,1401],[1402,1599,1402],[1403,1598,1403],[1404,1597,1404],[1405,1596,1405],[1406,1595,1406],[1407,1594,1407],[1408,1593,1408],[1409,1592,1409],[1410,1591,1410],[1411,1590,1411],[1412,1589,1412],[1413,1588,1413],[1414,1587,1414],[1415,1586,1415],[1416,1585,1416],[1417,1584,1417],[1418,1583,1418],[1419,1582,1419],[1420,1581,1420],[1421,1580,1421],[1422,1579,1422],[1423,1578,1423],[1424,1577,1424],[1425,1576,1425],[1426,1575,1426],[1427,1574,1427],[1428,1573,1428],[1429,1572,1429],[1430,1571,1430],[1431,1570,1431],[1432,1569,1432],[1433,1568,1433],[1434,1567,1434],[1435,1566,1435],[1436,1565,1436],[1437,1564,1437],[1438,1563,1438],[1439,1562,1439],[1440,1561,1440],[1441,1560,1441],[1442,1559,1442],[1443,1558,1443],[1444,1557,1444],[1445,1556,1445],[1446,1555,1446],[1447,1554,1447],[1448,1553,1448],[1449,1552,1449],[1450,1551,1450],[1451,1550,1451],[1452,1549,1452],[1453,1548,1453],[1454,1547,1454],[1455,1546,1455],[1456,1545,1456],[1457,1544,1457],[1458,1543,1458],[1459,1542,1459],[1460,1541,1460],[1461,1540,1461],[1462,1539,1462],[1463,1538,1463],[1464,1537,1464],[1465,1536,1465],[1466,1535,1466],[1467,1534,1467],[1468,1533,1468],[1469,1532,1469],[1470,1531,1470],[1471,1530,1471],[1472,1529,1472],[1473,1528,1473],[1474,1527,1474],[1475,1526,1475],[1476,1525,1476],[1477,1524,1477],[1478,1523,1478],[1479,1522,1479],[1480,1521,1480],[1481,1520,1481],[1482,1519,1482],[1483,1518,1483],[1484,1517,1484],[1485,1516,1485],[1486,1515,1486],[1487,1514,1487],[1488,1513,1488],[1489,1512,1489],[1490,1511,1490],[1491,1510,1491],[1492,1509,1492],[1493,1508,1493],[1494,1507,1494],[1495,1506,1495],[1496,1505,1496],[1497,1504,1497],[1498,1503,1498],[1499,1502,1499],[1500,1501,1500]]

        # print self.s.getSkyline(buildings)